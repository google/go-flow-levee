func TestMultiBlock()
0: entry
	 0(*ssa.Alloc          ): t0 = local image.Point (p)
	 1(*ssa.FieldAddr      ): t1 = &t0.X [#0]
	 2(*ssa.FieldAddr      ): t2 = &t0.Y [#1]
	 3(*ssa.Store          ): *t1 = 1:int
	 4(*ssa.Store          ): *t2 = 2:int
	 5(*ssa.FieldAddr      ): t3 = &t0.X [#0]
	 6(*ssa.UnOp           ): t4 = *t3
	 7(*ssa.BinOp          ): t5 = t4 > 0:int
	 8(*ssa.If             ): if t5 goto 1 else 3
1: if.then
	 0(*ssa.FieldAddr      ): t6 = &t0.Y [#1]
	 1(*ssa.UnOp           ): t7 = *t6
	 2(*ssa.BinOp          ): t8 = t7 > 0:int
	 3(*ssa.If             ): if t8 goto 4 else 2
2: if.then
	 0(*ssa.FieldAddr      ): t14 = &t0.X [#0]
	 1(*ssa.UnOp           ): t15 = *t14
	 2(*ssa.FieldAddr      ): t16 = &t0.Y [#1]
	 3(*ssa.UnOp           ): t17 = *t16
	 4(*ssa.Alloc          ): t18 = new [2]interface{} (varargs)
	 5(*ssa.IndexAddr      ): t19 = &t18[0:int]
	 6(*ssa.MakeInterface  ): t20 = make interface{} <- int (t15)
	 7(*ssa.Store          ): *t19 = t20
	 8(*ssa.IndexAddr      ): t21 = &t18[1:int]
	 9(*ssa.MakeInterface  ): t22 = make interface{} <- int (t17)
	10(*ssa.Store          ): *t21 = t22
	11(*ssa.Slice          ): t23 = slice t18[:]
	12(*ssa.Call           ): t24 = fmt.Printf("in top right quad...":string, t23...)
	13(*ssa.Jump           ): jump 2
3: if.done
	 0(*ssa.Return         ): return
4: if.else
	 0(*ssa.Alloc          ): t9 = new [1]interface{} (varargs)
	 1(*ssa.IndexAddr      ): t10 = &t9[0:int]
	 2(*ssa.MakeInterface  ): t11 = make interface{} <- string ("somewhere":string)
	 3(*ssa.Store          ): *t10 = t11
	 4(*ssa.Slice          ): t12 = slice t9[:]
	 5(*ssa.Call           ): t13 = fmt.Println(t12...)
	 6(*ssa.Jump           ): jump 2
